// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: learning/v1/learning.proto

package learningv1

import (
	v1 "github.com/eslsoft/vocnet/pkg/api/common/v1"
	v11 "github.com/eslsoft/vocnet/pkg/api/dict/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User's personal lexeme record with learning context
type LearnedLexeme struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          *LearnedLexemeSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *LearnedLexemeStatus   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LearnedLexeme) Reset() {
	*x = LearnedLexeme{}
	mi := &file_learning_v1_learning_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearnedLexeme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnedLexeme) ProtoMessage() {}

func (x *LearnedLexeme) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnedLexeme.ProtoReflect.Descriptor instead.
func (*LearnedLexeme) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{0}
}

func (x *LearnedLexeme) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LearnedLexeme) GetSpec() *LearnedLexemeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *LearnedLexeme) GetStatus() *LearnedLexemeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Spec is user-provided data for the lexeme
type LearnedLexemeSpec struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Term          string                   `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`
	Language      v1.Language              `protobuf:"varint,2,opt,name=language,proto3,enum=common.v1.Language" json:"language,omitempty"`     // Language of the word
	MasteryLevel  int32                    `protobuf:"varint,3,opt,name=mastery_level,json=masteryLevel,proto3" json:"mastery_level,omitempty"` // Mastery level (0-5), self-assessed by user
	Relations     []*LearnedLexemeRelation `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`                            // Relationships to other lexemes
	Sentences     []*v11.Sentence          `protobuf:"bytes,6,rep,name=sentences,proto3" json:"sentences,omitempty"`                            // Contextual example sentences
	Tags          []string                 `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                      // User-defined tags
	Notes         []string                 `protobuf:"bytes,8,rep,name=notes,proto3" json:"notes,omitempty"`                                    // User's personal notes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LearnedLexemeSpec) Reset() {
	*x = LearnedLexemeSpec{}
	mi := &file_learning_v1_learning_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearnedLexemeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnedLexemeSpec) ProtoMessage() {}

func (x *LearnedLexemeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnedLexemeSpec.ProtoReflect.Descriptor instead.
func (*LearnedLexemeSpec) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{1}
}

func (x *LearnedLexemeSpec) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *LearnedLexemeSpec) GetLanguage() v1.Language {
	if x != nil {
		return x.Language
	}
	return v1.Language(0)
}

func (x *LearnedLexemeSpec) GetMasteryLevel() int32 {
	if x != nil {
		return x.MasteryLevel
	}
	return 0
}

func (x *LearnedLexemeSpec) GetRelations() []*LearnedLexemeRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *LearnedLexemeSpec) GetSentences() []*v11.Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

func (x *LearnedLexemeSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LearnedLexemeSpec) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

// Status is read-only, maintained by the system
type LearnedLexemeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mastery       *MasteryBreakdown      `protobuf:"bytes,3,opt,name=mastery,proto3" json:"mastery,omitempty"`                               // Detailed mastery scores
	ReviewTiming  *ReviewTiming          `protobuf:"bytes,4,opt,name=review_timing,json=reviewTiming,proto3" json:"review_timing,omitempty"` // Review scheduling info
	QueryCount    int64                  `protobuf:"varint,5,opt,name=query_count,json=queryCount,proto3" json:"query_count,omitempty"`      // How many times user looked up this word
	CreatedBy     string                 `protobuf:"bytes,20,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`         // Owner username (read-only)
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LearnedLexemeStatus) Reset() {
	*x = LearnedLexemeStatus{}
	mi := &file_learning_v1_learning_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearnedLexemeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnedLexemeStatus) ProtoMessage() {}

func (x *LearnedLexemeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnedLexemeStatus.ProtoReflect.Descriptor instead.
func (*LearnedLexemeStatus) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{2}
}

func (x *LearnedLexemeStatus) GetMastery() *MasteryBreakdown {
	if x != nil {
		return x.Mastery
	}
	return nil
}

func (x *LearnedLexemeStatus) GetReviewTiming() *ReviewTiming {
	if x != nil {
		return x.ReviewTiming
	}
	return nil
}

func (x *LearnedLexemeStatus) GetQueryCount() int64 {
	if x != nil {
		return x.QueryCount
	}
	return 0
}

func (x *LearnedLexemeStatus) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *LearnedLexemeStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LearnedLexemeStatus) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Mastery breakdown for different skills
type MasteryBreakdown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Listen        int32                  `protobuf:"varint,1,opt,name=listen,proto3" json:"listen,omitempty"`       // Listening mastery (0-5)
	Read          int32                  `protobuf:"varint,2,opt,name=read,proto3" json:"read,omitempty"`           // Reading mastery (0-5)
	Spell         int32                  `protobuf:"varint,3,opt,name=spell,proto3" json:"spell,omitempty"`         // Spelling mastery (0-5)
	Pronounce     int32                  `protobuf:"varint,4,opt,name=pronounce,proto3" json:"pronounce,omitempty"` // Pronunciation mastery (0-5)
	Overall       int32                  `protobuf:"varint,6,opt,name=overall,proto3" json:"overall,omitempty"`     // Overall mastery score (0-500, stored as *100)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MasteryBreakdown) Reset() {
	*x = MasteryBreakdown{}
	mi := &file_learning_v1_learning_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasteryBreakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasteryBreakdown) ProtoMessage() {}

func (x *MasteryBreakdown) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasteryBreakdown.ProtoReflect.Descriptor instead.
func (*MasteryBreakdown) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{3}
}

func (x *MasteryBreakdown) GetListen() int32 {
	if x != nil {
		return x.Listen
	}
	return 0
}

func (x *MasteryBreakdown) GetRead() int32 {
	if x != nil {
		return x.Read
	}
	return 0
}

func (x *MasteryBreakdown) GetSpell() int32 {
	if x != nil {
		return x.Spell
	}
	return 0
}

func (x *MasteryBreakdown) GetPronounce() int32 {
	if x != nil {
		return x.Pronounce
	}
	return 0
}

func (x *MasteryBreakdown) GetOverall() int32 {
	if x != nil {
		return x.Overall
	}
	return 0
}

// Review timing information
type ReviewTiming struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastReviewAt  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_review_at,json=lastReviewAt,proto3" json:"last_review_at,omitempty"`
	NextReviewAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=next_review_at,json=nextReviewAt,proto3" json:"next_review_at,omitempty"`
	IntervalDays  int32                  `protobuf:"varint,3,opt,name=interval_days,json=intervalDays,proto3" json:"interval_days,omitempty"` // Current review interval
	FailCount     int32                  `protobuf:"varint,4,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`          // Consecutive failure count
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewTiming) Reset() {
	*x = ReviewTiming{}
	mi := &file_learning_v1_learning_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewTiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewTiming) ProtoMessage() {}

func (x *ReviewTiming) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewTiming.ProtoReflect.Descriptor instead.
func (*ReviewTiming) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{4}
}

func (x *ReviewTiming) GetLastReviewAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReviewAt
	}
	return nil
}

func (x *ReviewTiming) GetNextReviewAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextReviewAt
	}
	return nil
}

func (x *ReviewTiming) GetIntervalDays() int32 {
	if x != nil {
		return x.IntervalDays
	}
	return 0
}

func (x *ReviewTiming) GetFailCount() int32 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

// Lexeme-to-lexeme relationship for building vocabulary networks
type LearnedLexemeRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	RelationType  v1.RelationType        `protobuf:"varint,2,opt,name=relation_type,json=relationType,proto3,enum=common.v1.RelationType" json:"relation_type,omitempty"` // Type of relationship
	Note          string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                                                  // User's note about this relation
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LearnedLexemeRelation) Reset() {
	*x = LearnedLexemeRelation{}
	mi := &file_learning_v1_learning_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearnedLexemeRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnedLexemeRelation) ProtoMessage() {}

func (x *LearnedLexemeRelation) ProtoReflect() protoreflect.Message {
	mi := &file_learning_v1_learning_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnedLexemeRelation.ProtoReflect.Descriptor instead.
func (*LearnedLexemeRelation) Descriptor() ([]byte, []int) {
	return file_learning_v1_learning_proto_rawDescGZIP(), []int{5}
}

func (x *LearnedLexemeRelation) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *LearnedLexemeRelation) GetRelationType() v1.RelationType {
	if x != nil {
		return x.RelationType
	}
	return v1.RelationType(0)
}

func (x *LearnedLexemeRelation) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *LearnedLexemeRelation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LearnedLexemeRelation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_learning_v1_learning_proto protoreflect.FileDescriptor

const file_learning_v1_learning_proto_rawDesc = "" +
	"\n" +
	"\x1alearning/v1/learning.proto\x12\vlearning.v1\x1a\x15common/v1/types.proto\x1a\x12dict/v1/word.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8d\x01\n" +
	"\rLearnedLexeme\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x122\n" +
	"\x04spec\x18\x02 \x01(\v2\x1e.learning.v1.LearnedLexemeSpecR\x04spec\x128\n" +
	"\x06status\x18\x03 \x01(\v2 .learning.v1.LearnedLexemeStatusR\x06status\"\x9a\x02\n" +
	"\x11LearnedLexemeSpec\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12/\n" +
	"\blanguage\x18\x02 \x01(\x0e2\x13.common.v1.LanguageR\blanguage\x12#\n" +
	"\rmastery_level\x18\x03 \x01(\x05R\fmasteryLevel\x12@\n" +
	"\trelations\x18\x05 \x03(\v2\".learning.v1.LearnedLexemeRelationR\trelations\x12/\n" +
	"\tsentences\x18\x06 \x03(\v2\x11.dict.v1.SentenceR\tsentences\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x14\n" +
	"\x05notes\x18\b \x03(\tR\x05notes\"\xc4\x02\n" +
	"\x13LearnedLexemeStatus\x127\n" +
	"\amastery\x18\x03 \x01(\v2\x1d.learning.v1.MasteryBreakdownR\amastery\x12>\n" +
	"\rreview_timing\x18\x04 \x01(\v2\x19.learning.v1.ReviewTimingR\freviewTiming\x12\x1f\n" +
	"\vquery_count\x18\x05 \x01(\x03R\n" +
	"queryCount\x12\x1d\n" +
	"\n" +
	"created_by\x18\x14 \x01(\tR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x8c\x01\n" +
	"\x10MasteryBreakdown\x12\x16\n" +
	"\x06listen\x18\x01 \x01(\x05R\x06listen\x12\x12\n" +
	"\x04read\x18\x02 \x01(\x05R\x04read\x12\x14\n" +
	"\x05spell\x18\x03 \x01(\x05R\x05spell\x12\x1c\n" +
	"\tpronounce\x18\x04 \x01(\x05R\tpronounce\x12\x18\n" +
	"\aoverall\x18\x06 \x01(\x05R\aoverall\"\xd6\x01\n" +
	"\fReviewTiming\x12@\n" +
	"\x0elast_review_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\flastReviewAt\x12@\n" +
	"\x0enext_review_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\fnextReviewAt\x12#\n" +
	"\rinterval_days\x18\x03 \x01(\x05R\fintervalDays\x12\x1d\n" +
	"\n" +
	"fail_count\x18\x04 \x01(\x05R\tfailCount\"\xf3\x01\n" +
	"\x15LearnedLexemeRelation\x12\x12\n" +
	"\x04word\x18\x01 \x01(\tR\x04word\x12<\n" +
	"\rrelation_type\x18\x02 \x01(\x0e2\x17.common.v1.RelationTypeR\frelationType\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\x129\n" +
	"\n" +
	"created_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\xa7\x01\n" +
	"\x0fcom.learning.v1B\rLearningProtoP\x01Z8github.com/eslsoft/vocnet/pkg/api/learning/v1;learningv1\xa2\x02\x03LXX\xaa\x02\vLearning.V1\xca\x02\vLearning\\V1\xe2\x02\x17Learning\\V1\\GPBMetadata\xea\x02\fLearning::V1b\x06proto3"

var (
	file_learning_v1_learning_proto_rawDescOnce sync.Once
	file_learning_v1_learning_proto_rawDescData []byte
)

func file_learning_v1_learning_proto_rawDescGZIP() []byte {
	file_learning_v1_learning_proto_rawDescOnce.Do(func() {
		file_learning_v1_learning_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_learning_v1_learning_proto_rawDesc), len(file_learning_v1_learning_proto_rawDesc)))
	})
	return file_learning_v1_learning_proto_rawDescData
}

var file_learning_v1_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_learning_v1_learning_proto_goTypes = []any{
	(*LearnedLexeme)(nil),         // 0: learning.v1.LearnedLexeme
	(*LearnedLexemeSpec)(nil),     // 1: learning.v1.LearnedLexemeSpec
	(*LearnedLexemeStatus)(nil),   // 2: learning.v1.LearnedLexemeStatus
	(*MasteryBreakdown)(nil),      // 3: learning.v1.MasteryBreakdown
	(*ReviewTiming)(nil),          // 4: learning.v1.ReviewTiming
	(*LearnedLexemeRelation)(nil), // 5: learning.v1.LearnedLexemeRelation
	(v1.Language)(0),              // 6: common.v1.Language
	(*v11.Sentence)(nil),          // 7: dict.v1.Sentence
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(v1.RelationType)(0),          // 9: common.v1.RelationType
}
var file_learning_v1_learning_proto_depIdxs = []int32{
	1,  // 0: learning.v1.LearnedLexeme.spec:type_name -> learning.v1.LearnedLexemeSpec
	2,  // 1: learning.v1.LearnedLexeme.status:type_name -> learning.v1.LearnedLexemeStatus
	6,  // 2: learning.v1.LearnedLexemeSpec.language:type_name -> common.v1.Language
	5,  // 3: learning.v1.LearnedLexemeSpec.relations:type_name -> learning.v1.LearnedLexemeRelation
	7,  // 4: learning.v1.LearnedLexemeSpec.sentences:type_name -> dict.v1.Sentence
	3,  // 5: learning.v1.LearnedLexemeStatus.mastery:type_name -> learning.v1.MasteryBreakdown
	4,  // 6: learning.v1.LearnedLexemeStatus.review_timing:type_name -> learning.v1.ReviewTiming
	8,  // 7: learning.v1.LearnedLexemeStatus.created_at:type_name -> google.protobuf.Timestamp
	8,  // 8: learning.v1.LearnedLexemeStatus.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 9: learning.v1.ReviewTiming.last_review_at:type_name -> google.protobuf.Timestamp
	8,  // 10: learning.v1.ReviewTiming.next_review_at:type_name -> google.protobuf.Timestamp
	9,  // 11: learning.v1.LearnedLexemeRelation.relation_type:type_name -> common.v1.RelationType
	8,  // 12: learning.v1.LearnedLexemeRelation.created_at:type_name -> google.protobuf.Timestamp
	8,  // 13: learning.v1.LearnedLexemeRelation.updated_at:type_name -> google.protobuf.Timestamp
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_learning_v1_learning_proto_init() }
func file_learning_v1_learning_proto_init() {
	if File_learning_v1_learning_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_learning_v1_learning_proto_rawDesc), len(file_learning_v1_learning_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_learning_v1_learning_proto_goTypes,
		DependencyIndexes: file_learning_v1_learning_proto_depIdxs,
		MessageInfos:      file_learning_v1_learning_proto_msgTypes,
	}.Build()
	File_learning_v1_learning_proto = out.File
	file_learning_v1_learning_proto_goTypes = nil
	file_learning_v1_learning_proto_depIdxs = nil
}
