// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dict/v1/phrase.proto

package dictv1

import (
	v1 "github.com/eslsoft/vocnet/pkg/api/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Phrase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // Auto-increment ID (CRUD only)
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                                  // Surface form of the phrase
	Language      v1.Language            `protobuf:"varint,3,opt,name=language,proto3,enum=common.v1.Language" json:"language,omitempty"` // Language of the phrase
	Definitions   []*PhraseDefinition    `protobuf:"bytes,4,rep,name=definitions,proto3" json:"definitions,omitempty"`                    // Possibly multiple languages' definitions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Phrase) Reset() {
	*x = Phrase{}
	mi := &file_dict_v1_phrase_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Phrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phrase) ProtoMessage() {}

func (x *Phrase) ProtoReflect() protoreflect.Message {
	mi := &file_dict_v1_phrase_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phrase.ProtoReflect.Descriptor instead.
func (*Phrase) Descriptor() ([]byte, []int) {
	return file_dict_v1_phrase_proto_rawDescGZIP(), []int{0}
}

func (x *Phrase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Phrase) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Phrase) GetLanguage() v1.Language {
	if x != nil {
		return x.Language
	}
	return v1.Language(0)
}

func (x *Phrase) GetDefinitions() []*PhraseDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type PhraseDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      v1.Language            `protobuf:"varint,1,opt,name=language,proto3,enum=common.v1.Language" json:"language,omitempty"` // Language of the translation
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                                  // Definition text
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhraseDefinition) Reset() {
	*x = PhraseDefinition{}
	mi := &file_dict_v1_phrase_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhraseDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhraseDefinition) ProtoMessage() {}

func (x *PhraseDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_dict_v1_phrase_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhraseDefinition.ProtoReflect.Descriptor instead.
func (*PhraseDefinition) Descriptor() ([]byte, []int) {
	return file_dict_v1_phrase_proto_rawDescGZIP(), []int{1}
}

func (x *PhraseDefinition) GetLanguage() v1.Language {
	if x != nil {
		return x.Language
	}
	return v1.Language(0)
}

func (x *PhraseDefinition) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_dict_v1_phrase_proto protoreflect.FileDescriptor

const file_dict_v1_phrase_proto_rawDesc = "" +
	"\n" +
	"\x14dict/v1/phrase.proto\x12\adict.v1\x1a\x15common/v1/types.proto\"\x9a\x01\n" +
	"\x06Phrase\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12/\n" +
	"\blanguage\x18\x03 \x01(\x0e2\x13.common.v1.LanguageR\blanguage\x12;\n" +
	"\vdefinitions\x18\x04 \x03(\v2\x19.dict.v1.PhraseDefinitionR\vdefinitions\"W\n" +
	"\x10PhraseDefinition\x12/\n" +
	"\blanguage\x18\x01 \x01(\x0e2\x13.common.v1.LanguageR\blanguage\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text2\x13\n" +
	"\x11DictPhraseServiceB\x89\x01\n" +
	"\vcom.dict.v1B\vPhraseProtoP\x01Z0github.com/eslsoft/vocnet/pkg/api/dict/v1;dictv1\xa2\x02\x03DXX\xaa\x02\aDict.V1\xca\x02\aDict\\V1\xe2\x02\x13Dict\\V1\\GPBMetadata\xea\x02\bDict::V1b\x06proto3"

var (
	file_dict_v1_phrase_proto_rawDescOnce sync.Once
	file_dict_v1_phrase_proto_rawDescData []byte
)

func file_dict_v1_phrase_proto_rawDescGZIP() []byte {
	file_dict_v1_phrase_proto_rawDescOnce.Do(func() {
		file_dict_v1_phrase_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dict_v1_phrase_proto_rawDesc), len(file_dict_v1_phrase_proto_rawDesc)))
	})
	return file_dict_v1_phrase_proto_rawDescData
}

var file_dict_v1_phrase_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dict_v1_phrase_proto_goTypes = []any{
	(*Phrase)(nil),           // 0: dict.v1.Phrase
	(*PhraseDefinition)(nil), // 1: dict.v1.PhraseDefinition
	(v1.Language)(0),         // 2: common.v1.Language
}
var file_dict_v1_phrase_proto_depIdxs = []int32{
	2, // 0: dict.v1.Phrase.language:type_name -> common.v1.Language
	1, // 1: dict.v1.Phrase.definitions:type_name -> dict.v1.PhraseDefinition
	2, // 2: dict.v1.PhraseDefinition.language:type_name -> common.v1.Language
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dict_v1_phrase_proto_init() }
func file_dict_v1_phrase_proto_init() {
	if File_dict_v1_phrase_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dict_v1_phrase_proto_rawDesc), len(file_dict_v1_phrase_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dict_v1_phrase_proto_goTypes,
		DependencyIndexes: file_dict_v1_phrase_proto_depIdxs,
		MessageInfos:      file_dict_v1_phrase_proto_msgTypes,
	}.Build()
	File_dict_v1_phrase_proto = out.File
	file_dict_v1_phrase_proto_goTypes = nil
	file_dict_v1_phrase_proto_depIdxs = nil
}
