// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/eslsoft/vocnet/api/gen/dict/v1/dictv1connect"
	"github.com/eslsoft/vocnet/api/gen/vocnet/v1/vocnetv1connect"
	"github.com/eslsoft/vocnet/internal/adapter/grpc"
	"github.com/eslsoft/vocnet/internal/adapter/repository"
	"github.com/eslsoft/vocnet/internal/infrastructure/config"
	"github.com/eslsoft/vocnet/internal/infrastructure/database"
	"github.com/eslsoft/vocnet/internal/infrastructure/database/db"
	"github.com/eslsoft/vocnet/internal/infrastructure/server"
	"github.com/eslsoft/vocnet/internal/usecase"
	"github.com/google/wire"
	"github.com/jackc/pgx/v5/pgxpool"
)

// Injectors from wire.go:

// Initialize builds the application container using Wire.
func Initialize() (*Container, func(), error) {
	configConfig, err := config.Load()
	if err != nil {
		return nil, nil, err
	}
	logger, err := server.NewLogger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	pool, cleanup, err := database.NewConnection(configConfig)
	if err != nil {
		return nil, nil, err
	}
	queries := db.New(pool)
	vocRepository := repository.NewVocRepository(queries)
	wordUsecase := usecase.NewWordUsecase(vocRepository)
	wordServiceServer := grpc.NewWordServiceServer(wordUsecase)
	serverServer := server.NewServer(configConfig, logger, wordServiceServer)
	container := &Container{
		Logger: logger,
		Server: serverServer,
	}
	return container, func() {
		cleanup()
	}, nil
}

// wire.go:

var configSet = wire.NewSet(config.Load)

var databaseSet = wire.NewSet(database.NewConnection, wire.Bind(new(db.DBTX), new(*pgxpool.Pool)), db.New)

var repositorySet = wire.NewSet(repository.NewVocRepository, repository.NewUserWordRepository)

var usecaseSet = wire.NewSet(usecase.NewWordUsecase, usecase.NewUserWordUsecase)

var serviceSet = wire.NewSet(grpc.NewWordServiceServer, grpc.NewUserWordServiceServer, wire.Bind(new(vocnetv1connect.UserWordServiceHandler), new(*grpc.UserWordServiceServer)), wire.Bind(new(dictv1connect.WordServiceHandler), new(*grpc.WordServiceServer)))

var serverSet = wire.NewSet(server.NewLogger, server.NewServer)
