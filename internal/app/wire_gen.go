// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/eslsoft/vocnet/api/gen/dict/v1/dictv1connect"
	"github.com/eslsoft/vocnet/api/gen/vocnet/v1/vocnetv1connect"
	"github.com/eslsoft/vocnet/internal/adapter/connectrpc"
	"github.com/eslsoft/vocnet/internal/adapter/repository"
	"github.com/eslsoft/vocnet/internal/infrastructure/config"
	"github.com/eslsoft/vocnet/internal/infrastructure/database"
	"github.com/eslsoft/vocnet/internal/infrastructure/server"
	"github.com/eslsoft/vocnet/internal/usecase"
	"github.com/google/wire"
)

// Injectors from wire.go:

// Initialize builds the application container using Wire.
func Initialize() (*Container, func(), error) {
	configConfig, err := config.Load()
	if err != nil {
		return nil, nil, err
	}
	logger, err := server.NewLogger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	client, cleanup, err := database.NewEntClient(configConfig)
	if err != nil {
		return nil, nil, err
	}
	wordRepository := repository.NewWordRepository(client)
	wordUsecase := usecase.NewWordUsecase(wordRepository)
	wordServiceServer := grpc.NewWordServiceServer(wordUsecase)
	userWordRepository := repository.NewUserWordRepository(client)
	userWordUsecase := usecase.NewUserWordUsecase(userWordRepository)
	userWordServiceServer := grpc.NewUserWordServiceServer(userWordUsecase)
	serverServer := server.NewServer(configConfig, logger, wordServiceServer, userWordServiceServer)
	container := &Container{
		Logger:    logger,
		Server:    serverServer,
		EntClient: client,
	}
	return container, func() {
		cleanup()
	}, nil
}

// wire.go:

var configSet = wire.NewSet(config.Load)

var databaseSet = wire.NewSet(database.NewEntClient)

var repositorySet = wire.NewSet(repository.NewWordRepository, repository.NewUserWordRepository)

var usecaseSet = wire.NewSet(usecase.NewWordUsecase, usecase.NewUserWordUsecase)

var serviceSet = wire.NewSet(grpc.NewWordServiceServer, grpc.NewUserWordServiceServer, wire.Bind(new(vocnetv1connect.UserWordServiceHandler), new(*grpc.UserWordServiceServer)), wire.Bind(new(dictv1connect.WordServiceHandler), new(*grpc.WordServiceServer)))

var serverSet = wire.NewSet(server.NewLogger, server.NewServer)
