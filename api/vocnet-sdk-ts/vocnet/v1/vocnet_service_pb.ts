// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file vocnet/v1/vocnet_service.proto (package vocnet.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { IDRequestSchema, PaginationRequest, PaginationResponse } from "../../common/v1/types_pb";
import { file_common_v1_types } from "../../common/v1/types_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import { file_validate_validate } from "../../validate/validate_pb";
import type { MasteryBreakdown, UserWord, UserWordSchema } from "./vocnet_pb";
import { file_vocnet_v1_vocnet } from "./vocnet_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file vocnet/v1/vocnet_service.proto.
 */
export const file_vocnet_v1_vocnet_service: GenFile = /*@__PURE__*/
  fileDesc("Ch52b2NuZXQvdjEvdm9jbmV0X3NlcnZpY2UucHJvdG8SCXZvY25ldC52MSI3ChJDb2xsZWN0V29yZFJlcXVlc3QSIQoEd29yZBgBIAEoCzITLnZvY25ldC52MS5Vc2VyV29yZCJ1ChxVcGRhdGVVc2VyV29yZE1hc3RlcnlSZXF1ZXN0EhgKB3dvcmRfaWQYASABKANCB/pCBCICIAASLAoHbWFzdGVyeRgCIAEoCzIbLnZvY25ldC52MS5NYXN0ZXJ5QnJlYWtkb3duEg0KBW5vdGVzGAMgASgJImoKFExpc3RVc2VyV29yZHNSZXF1ZXN0EjAKCnBhZ2luYXRpb24YASABKAsyHC5jb21tb24udjEuUGFnaW5hdGlvblJlcXVlc3QSDgoGZmlsdGVyGAIgASgJEhAKCG9yZGVyX2J5GAMgASgJInMKFUxpc3RVc2VyV29yZHNSZXNwb25zZRIxCgpwYWdpbmF0aW9uGAEgASgLMh0uY29tbW9uLnYxLlBhZ2luYXRpb25SZXNwb25zZRInCgp1c2VyX3dvcmRzGAIgAygLMhMudm9jbmV0LnYxLlVzZXJXb3JkMtUDCg9Vc2VyV29yZFNlcnZpY2USYgoLQ29sbGVjdFdvcmQSHS52b2NuZXQudjEuQ29sbGVjdFdvcmRSZXF1ZXN0GhMudm9jbmV0LnYxLlVzZXJXb3JkIh+C0+STAhk6ASoiFC9hcGkvdjEvdm9jbmV0L3dvcmRzEogBChVVcGRhdGVVc2VyV29yZE1hc3RlcnkSJy52b2NuZXQudjEuVXBkYXRlVXNlcldvcmRNYXN0ZXJ5UmVxdWVzdBoTLnZvY25ldC52MS5Vc2VyV29yZCIxgtPkkwIrOgEqMiYvYXBpL3YxL3ZvY25ldC93b3Jkcy97d29yZF9pZH0vbWFzdGVyeRJwCg1MaXN0VXNlcldvcmRzEh8udm9jbmV0LnYxLkxpc3RVc2VyV29yZHNSZXF1ZXN0GiAudm9jbmV0LnYxLkxpc3RVc2VyV29yZHNSZXNwb25zZSIcgtPkkwIWEhQvYXBpL3YxL3ZvY25ldC93b3JkcxJhCg5EZWxldGVVc2VyV29yZBIULmNvbW1vbi52MS5JRFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiIYLT5JMCGyoZL2FwaS92MS92b2NuZXQvd29yZHMve2lkfUKeAQoNY29tLnZvY25ldC52MUISVm9jbmV0U2VydmljZVByb3RvUAFaNGdpdGh1Yi5jb20vZXNsc29mdC92b2NuZXQvYXBpL2dlbi92b2NuZXQvdjE7dm9jbmV0djGiAgNWWFiqAglWb2NuZXQuVjHKAglWb2NuZXRcVjHiAhVWb2NuZXRcVjFcR1BCTWV0YWRhdGHqAgpWb2NuZXQ6OlYxYgZwcm90bzM", [file_common_v1_types, file_google_api_annotations, file_google_protobuf_empty, file_validate_validate, file_vocnet_v1_vocnet]);

/**
 * CollectWord request - main API for adding words to user vocabulary
 *
 * @generated from message vocnet.v1.CollectWordRequest
 */
export type CollectWordRequest = Message<"vocnet.v1.CollectWordRequest"> & {
  /**
   * @generated from field: vocnet.v1.UserWord word = 1;
   */
  word?: UserWord;
};

/**
 * Describes the message vocnet.v1.CollectWordRequest.
 * Use `create(CollectWordRequestSchema)` to create a new message.
 */
export const CollectWordRequestSchema: GenMessage<CollectWordRequest> = /*@__PURE__*/
  messageDesc(file_vocnet_v1_vocnet_service, 0);

/**
 * UpdateUserWordMastery request
 *
 * @generated from message vocnet.v1.UpdateUserWordMasteryRequest
 */
export type UpdateUserWordMasteryRequest = Message<"vocnet.v1.UpdateUserWordMasteryRequest"> & {
  /**
   * @generated from field: int64 word_id = 1;
   */
  wordId: bigint;

  /**
   * @generated from field: vocnet.v1.MasteryBreakdown mastery = 2;
   */
  mastery?: MasteryBreakdown;

  /**
   * @generated from field: string notes = 3;
   */
  notes: string;
};

/**
 * Describes the message vocnet.v1.UpdateUserWordMasteryRequest.
 * Use `create(UpdateUserWordMasteryRequestSchema)` to create a new message.
 */
export const UpdateUserWordMasteryRequestSchema: GenMessage<UpdateUserWordMasteryRequest> = /*@__PURE__*/
  messageDesc(file_vocnet_v1_vocnet_service, 1);

/**
 * ListUserWords request with comprehensive filtering
 *
 * @generated from message vocnet.v1.ListUserWordsRequest
 */
export type ListUserWordsRequest = Message<"vocnet.v1.ListUserWordsRequest"> & {
  /**
   * pagination parameters
   *
   * @generated from field: common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * filtering options using CEL expressions
   *
   * @generated from field: string filter = 2;
   */
  filter: string;

  /**
   * ordering options. e.g. "word asc", "mastery.overall desc"
   *
   * @generated from field: string order_by = 3;
   */
  orderBy: string;
};

/**
 * Describes the message vocnet.v1.ListUserWordsRequest.
 * Use `create(ListUserWordsRequestSchema)` to create a new message.
 */
export const ListUserWordsRequestSchema: GenMessage<ListUserWordsRequest> = /*@__PURE__*/
  messageDesc(file_vocnet_v1_vocnet_service, 2);

/**
 * @generated from message vocnet.v1.ListUserWordsResponse
 */
export type ListUserWordsResponse = Message<"vocnet.v1.ListUserWordsResponse"> & {
  /**
   * @generated from field: common.v1.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponse;

  /**
   * @generated from field: repeated vocnet.v1.UserWord user_words = 2;
   */
  userWords: UserWord[];
};

/**
 * Describes the message vocnet.v1.ListUserWordsResponse.
 * Use `create(ListUserWordsResponseSchema)` to create a new message.
 */
export const ListUserWordsResponseSchema: GenMessage<ListUserWordsResponse> = /*@__PURE__*/
  messageDesc(file_vocnet_v1_vocnet_service, 3);

/**
 * User word management service for personal vocabulary learning
 *
 * @generated from service vocnet.v1.UserWordService
 */
export const UserWordService: GenService<{
  /**
   * Collect/add a word to user's vocabulary (creates global word if needed)
   *
   * @generated from rpc vocnet.v1.UserWordService.CollectWord
   */
  collectWord: {
    methodKind: "unary";
    input: typeof CollectWordRequestSchema;
    output: typeof UserWordSchema;
  },
  /**
   * Update mastery level and learning status
   *
   * @generated from rpc vocnet.v1.UserWordService.UpdateUserWordMastery
   */
  updateUserWordMastery: {
    methodKind: "unary";
    input: typeof UpdateUserWordMasteryRequestSchema;
    output: typeof UserWordSchema;
  },
  /**
   * List user's words with filtering and sorting
   *
   * @generated from rpc vocnet.v1.UserWordService.ListUserWords
   */
  listUserWords: {
    methodKind: "unary";
    input: typeof ListUserWordsRequestSchema;
    output: typeof ListUserWordsResponseSchema;
  },
  /**
   * Delete/deactivate a user word
   *
   * @generated from rpc vocnet.v1.UserWordService.DeleteUserWord
   */
  deleteUserWord: {
    methodKind: "unary";
    input: typeof IDRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_vocnet_v1_vocnet_service, 0);

