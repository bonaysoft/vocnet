syntax = "proto3";

package common.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

// OpenAPI v2 (Swagger) specification for the entire API
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Vocnet API"
    version: "1.0"
    description: "Vocnet API for vocabulary learning and word management"
    contact: {
      name: "Vocnet API Support"
      url: "https://github.com/eslsoft/vocnet"
    }
  }
  schemes: HTTP
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
};

// ID request message
message IDRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

// Pagination request parameters
message PaginationRequest {
  int32 limit = 1; // Number of items to return (default: 20, max: 100)
  int32 offset = 2; // Number of items to skip (default: 0)
}

// Pagination response metadata
message PaginationResponse {
  int32 total = 1; // Total number of items
  int32 page_no = 2; // Current page number (calculated from offset/limit)
}

// Supported languages
enum Language {
  LANGUAGE_UNSPECIFIED = 0;
  LANGUAGE_ENGLISH = 1; // en
  LANGUAGE_CHINESE = 2; // zh
  LANGUAGE_SPANISH = 3; // es
  LANGUAGE_FRENCH = 4; // fr
  LANGUAGE_GERMAN = 5; // de
  LANGUAGE_JAPANESE = 6; // ja
  LANGUAGE_KOREAN = 7; // ko
}

// Word relation types for building vocabulary networks
enum RelationType {
  RELATION_TYPE_UNSPECIFIED = 0;
  RELATION_TYPE_SYNONYM = 1; // 同义词
  RELATION_TYPE_ANTONYM = 2; // 反义词
  RELATION_TYPE_HYPERNYM = 3; // 上位词 (animal->dog)
  RELATION_TYPE_HYPONYM = 4; // 下位词 (dog->animal)
  RELATION_TYPE_ASSOCIATION = 5; // 关联词 (bread->butter)
  RELATION_TYPE_CAUSE_EFFECT = 6; // 因果关系 (smoke->cancer)
  RELATION_TYPE_PART_WHOLE = 7; // 部分-整体 (wheel->car)
  RELATION_TYPE_MNEMONIC = 10; // 联想/助记 (arbitrary user associations)
  RELATION_TYPE_CUSTOM = 100; // 自定义关系 (reserved for extension)
}
